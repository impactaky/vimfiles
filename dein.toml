[[plugins]]
repo = 'impactaky/vim-lsp'
rev = 'configurable_copen'
hook_add = '''
    nnoremap g] :LspDefinition<CR>
    nnoremap g[ :LspReferences<CR>
    nnoremap q[ :LspDocumentSymbol<CR>
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'
hook_add = '''
let g:lsp_settings = {
    \  'clangd': {'cmd': ['clangd-12']},
    \  'efm-langserver': {'disabled': v:false}
    \}
'''

[[plugins]]
repo = 'lighttiger2505/deoplete-vim-lsp'
lazy = 1
on_i = 1

[[plugins]]
repo = 'andymass/vim-matchup'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'cohama/lexima.vim'
lazy = 1
on_i = 1
hook_source = '''
	let g:lexima_enable_basic_rules=0
'''

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
    let g:EasyMotion_do_mapping=0
    nmap s <Plug>(easymotion-s)
    xmap s <Plug>(easymotion-s)
    omap z <Plug>(easymotion-s)
    omap of <Plug>(easymotion-f)
    omap ot <Plug>(easymotion-t)
'''

[[plugins]]
repo = 'google/vim-glaive'
depends = 'google/vim-codefmt'
merged = 0

[[plugins]]
repo = 'google/vim-maktaba'
depends = 'google/vim-codefmt'
merged = 0

[[plugins]]
repo = 'google/vim-codefmt'
merged = 0
hook_add = '''
    nmap <Leader>f :FormatCode<CR>
'''

[[plugins]]
repo = 'gutenye/json5.vim'
lazy = 1
on_ft = 'json5'
hook_add = '''
    au BufRead,BufNewFile *.json set filetype=json5
'''

[[plugins]]
repo = 'simnalamburt/vim-mundo'
lazy = 1
hook_add = "nnoremap <Leader>u :MundoToggle<CR>"

[[plugins]]
repo = 'linkinpark342/xonsh-vim'

# [[plugins]]
# repo = 'ozelentok/denite-gtags'
# lazy = 1
# on_source = 'denite.nvim'
# hook_add = '''
# 	nnoremap g[ :Denite gtags_ref:<C-R><C-W><CR>
# 	nnoremap g] :Denite gtags_def:<C-R><C-W><CR>
# 	nnoremap s[ :Denite gtags_ref:
# 	nnoremap s] :Denite gtags_def:
# '''

[[plugins]]
repo = 'himanoa/denite-git-grep'
lazy = 1
on_source = 'denite.nvim'
hook_add = 'nnoremap mg :Denite git-grep:'

[[plugins]]
repo = 'impactaky/denite-marionette'
lazy = 1
on_source = 'denite.nvim'

[[plugins]]
repo = 'impactaky/github-url.vim'
hook_add = '''
let g:github_url#yank_command = "silent normal V:call OscYank()\<CR>"
nmap gu <Plug>(github_url-file)
vmap gu <Plug>(github_url-line)
'''

[[plugins]]
repo = 'impactaky/marionette-show.nvim'
hook_add = 'runtime plugin_conf/marionette-show.nvim.vimrc'

[[plugins]]
repo = 'impactaky/deepl.nvim'
hook_add = '''
vmap mj :call deepl#replace_to_translated_text('', 'JA')<CR>gvgq
vmap me :call deepl#replace_to_translated_text('', 'EN')<CR>gvgq
nmap mj vip:call deepl#replace_to_translated_text('', 'JA')<CR>gvgq
nmap me vip:call deepl#replace_to_translated_text('', 'EN')<CR>gvgq
'''

[[plugins]]
repo = 'impactaky/quick-print-debug.nvim'
hook_add = '''
nmap ql <Plug>(quick_print_debug_line)
nmap qv <Plug>(quick_print_debug_value)
nmap qr <Plug>(quick_print_debug_run)
nmap qd <Plug>(quick_print_debug_delete)
'''

[[plugins]]
repo = 'impactaky/quickgdb.vim'
hook_add = '''
nmap <Leader>r <Plug>(quickgdb-run)
nmap <Leader>e <Plug>(quickgdb-printDebug)
'''

[[plugins]]
repo = 'impactaky/radix.vim'
hook_add = '''
nmap <Space>b <Plug>(radix-toBin)
nmap <Space>d <Plug>(radix-toDec)
nmap <Space>x <Plug>(radix-toHex)
'''

[[plugins]]
repo = 'impactaky/vim-toggle-quickfix'
hook_add = '''
    nmap gq <Plug>window:quickfix:loop
'''

[[plugins]]
repo = 'impactaky/xonsh2py.nvim'
lazy = 1
on_ft = ['xonsh', 'python']
hook_add = '''
    nmap <Leader>p <Plug>(xonsh2py)
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = 'runtime plugin_conf/lightline.vim.vimrc'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
	nmap <silent> ga <Plug>(EasyAlign)
	vmap <silent> ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'kana/vim-altr'
hook_add = '''
    nmap 'a <Plug>(altr-forward)
    call altr#define('src/%.cpp', 'include/%.hpp')
'''

[[plugins]]
repo = 'kana/vim-repeat'

[[plugins]]
repo = 'kana/vim-operator-user'

# [[plugins]]
# repo = 'kassio/neoterm'
# hook_add = '''
# let g:neoterm_repl_python = ['python3']
# '''

[[plugins]]
repo = 'kergoth/vim-bitbake'

[[plugins]]
repo = 'kmnk/vim-unite-giti'
lazy = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add = '''
	nmap gp <Plug>(yankround-gp)
	nmap gP <Plug>(yankround-gP)
	nmap p <Plug>(yankround-p)
	nmap P <Plug>(yankround-P)
	nmap <C-n> <Plug>(yankround-next)
	nmap <C-p> <Plug>(yankround-prev)
'''

[[plugins]]
repo = 'makerj/vim-transit'
hook_add = '''
	nmap <Leader>j :call TransitSetEnglishToJapanese()<CR>vipJo<Esc>kV:'<,'>TransItBlockPut<CR>kddVgq
	nmap <Leader>e :call TransitSetJapaneseToEnglish()<CR>vipJo<Esc>kV:'<,'>TransItBlockPut<CR>kddVgq
    runtime plugin_conf/vim-transit.vimrc
'''

[[plugins]]
repo = 'mattn/emmet-vim'
lazy = 1
on_ft = 'html'
hook_add = '''
    imap <C-y><C-y> <plug>(emmet-expand-abbr)
    nmap <C-y><C-y> <plug>(emmet-expand-abbr)
'''

[[plugins]]
repo = 'mindriot101/vim-yapf'

[[plugins]]
repo = 'moznion/unite-git-conflict.vim'
lazy = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'neoclide/denite-extra'
lazy = 1
on_source = 'denite.nvim'
hook_add = '''
	nmap <Leader>q :Denite quickfix<CR>
	nmap <Leader>l :Denite location_list<CR>
'''

[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add = '''
    let g:vim_markdown_folding_disabled = 1
'''

[[plugins]]
repo = 'pocari/vim-denite-kind-open-browser'

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
	runtime plugin_conf/vim-devicons.vimrc
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
hook_add = '''
    runtime plugin_conf/accelerated-jk.vim
	nmap j <Plug>(accelerated_jk_j)
	nmap k <Plug>(accelerated_jk_k)
'''

[[plugins]]
repo = 'rhysd/vim-clang-format'
hook_add = 'runtime plugin_conf/vim-clang-format.vimrc'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if   = "!has('nvim')"

[[plugins]]
repo = 'roxma/nvim-yarp'
if   = "!has('nvim')"

[[plugins]]
repo = 'rust-lang/rust.vim'
lazy = 1
on_ft = 'rust'

[[plugins]]
repo = 'sakhnik/nvim-gdb'
rev = 'a6f90ff54e1e487381ee693c282a1b5610f590fc'
hook_add = '''
    let g:nvimgdb_disable_start_keymaps=1
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
lazy = 1
hook_add = '''nnoremap <silent> <Leader>t :NERDTreeToggle<CR>'''
hook_source = 'runtime plugin_conf/nerdtree.vimrc'

# [[plugins]]
# repo = 'sebastianmarkow/deoplete-rust'
# lazy = 1
# on_ft = 'rust'
# hook_source = 'runtime plugin_conf/deoplete-rust.vimrc'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
lazy = 1
# depends = 'neomru.vim'
hook_source = 'runtime plugin_conf/denite.nvim.vimrc'
hook_add = '''
	nnoremap <Leader>n :exec buffer_name("%") == '' ? "Denite file/old" : "Denite -default-action=tabopen file/old"<CR>
	nnoremap mn :Denite file/rec<CR>
	nnoremap <Leader>g :Denite grep<CR>
	nnoremap gr :Denite -resume<CR>
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
lazy = 1
on_i = 1
hook_source = 'runtime plugin_conf/deoplete.nvim.vimrc'

[[plugins]]
repo = 'Shougo/echodoc.vim'
hook_add = '''
    autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif
'''

[[plugins]]
repo = 'Shougo/neco-syntax'
lazy = 1
on_source = ['deoplete.nvim']

[[plugins]]
repo = 'Shougo/neomru.vim'
lazy = 1
hook_add = '''
	nnoremap md :Denite directory_mru<CR>
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
lazy = 1
on_source = ['deoplete.nvim']
hook_add = '''
	imap <C-e> <Plug>(neosnippet_expand_or_jump)
	smap <C-e> <Plug>(neosnippet_expand_or_jump)
	runtime plugin_conf/neosnippet.vim.vimrc
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
lazy = 1
on_source = 'neosnippet.vim'

[[plugins]]
repo = 'Shougo/unite.vim'
lazy = 1

[[plugins]]
repo = 'Shougo/unite-build'
lazy = 1
on_source = 'unite.vim'
hook_add = '''
	nnoremap <Leader>b :execute(join(['Unite build:make:--directory=', g:my_build_directory], ''))<CR>
	nnoremap <Leader>B :UniteResume build<CR>
'''

[[plugins]]
repo = 'Shougo/unite-outline'
lazy = 1
on_source = 'unite.vim'
hook_add = '''
	nnoremap <Leader>o :Unite outline<CR>
'''

[[plugins]]
repo = 'Shougo/vimshell.vim'
lazy = 1
hook_add = '''nnoremap <Leader>s :VimShellTab<CR>'''
hook_source = 'runtime plugin_conf/vimshell.vim'

[[plugins]]
repo = 'skywind3000/asyncrun.vim'
hook_add = '''
    runtime plugin_conf/asyncrun.vim.vimrc
'''

[[plugins]]
repo = 'taku-o/vim-vis'
# hook_add = "vnoremap : :B "

[[plugins]]
repo = 'thinca/vim-prettyprint'

[[plugins]]
repo = 'thinca/vim-qfreplace'

[[plugins]]
repo = 'thinca/vim-quickrun'
lazy = 1
hook_add = '''
	runtime plugin_conf/vim-quickrun.vimrc
'''

[[plugins]]
repo = 'thinca/vim-unite-history'
lazy = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
	nnoremap <silent> <Leader>c  :TComment<CR>
	vnoremap <silent> <expr> <Leader>c mode() == '<C-v>' ? ':TCommentInline<CR>' : ':TCommentMaybeInline<CR>'
	runtime plugin_conf/tcomment_vim.vimrc
'''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
	let g:openbrowser_browser_commands = [
		\ {"name": "firefox",
		\  "args": ["{browser}", "{uri}"]},
	\]
'''

[[plugins]]
repo = 'ujihisa/unite-launch'
lazy = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'vim-jp/cpp-vim'
lazy = 1
on_ft = 'cpp'
 
[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'yssl/QFEnter'

[[plugins]]
repo = 'yuratomo/w3m.vim'
lazy = 1
if   = "executable('w3m')"

[[plugins]]
repo = 'zchee/deoplete-clang'
lazy = 1
hook_source = 'runtime plugin_conf/deoplete-clang.vimrc'
on_ft = ['cmake']
# if = "get(g:, 'lsp_disable', 0)"

# [[plugins]]
# repo = 'zchee/deoplete-jedi'
# hook_source = 'runtime plugin_conf/deoplete-jedi.vimrc'
# on_ft = ['python']

[[plugins]]
repo = 'zchee/deoplete-zsh'
if   = "executable('zsh')"
on_ft = ['sh', 'zsh']
hook_source = 'runtime plugin_conf/deoplete-zsh.vimrc'
